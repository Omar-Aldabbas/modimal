datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ======================
// USERS
// ======================
model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  orders    Order[]
  updatedAt DateTime @updatedAt
}

// ======================
// PRODUCTS
// ======================
model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  seasonId    Int?
  mainPic     String
  createdAt   DateTime @default(now())

  // RELATIONS
  variants   ProductVariant[]
  tags       ProductTag[]
  pics       ProductImage[]
  season     Season?          @relation(fields: [seasonId], references: [id])
  orderItems OrderItem[] // back-relation to OrderItem
}

// ======================
// SEASONS
// ======================
model Season {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

// ======================
// PRODUCT IMAGES
// ======================
model ProductImage {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  url       String
  isMain    Boolean @default(false)
}

// ======================
// PRODUCT VARIANTS
// ======================
model ProductVariant {
  id         Int         @id @default(autoincrement())
  product    Product     @relation(fields: [productId], references: [id])
  productId  Int
  size       String
  color      String
  quantity   Int
  orderItems OrderItem[] // back-relation to OrderItem
}

// ======================
// PRODUCT TAGS / CATEGORIES
// ======================
model ProductTag {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  name      String
}

// ======================
// ORDERS
// ======================
model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime    @default(now())
  items     OrderItem[]
}

// ======================
// ORDER ITEMS
// ======================
model OrderItem {
  id        Int             @id @default(autoincrement())
  order     Order           @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product         @relation(fields: [productId], references: [id])
  productId Int
  variant   ProductVariant? @relation(fields: [variantId], references: [id])
  variantId Int?
  quantity  Int
  price     Float
}
