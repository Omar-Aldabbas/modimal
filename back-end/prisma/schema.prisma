datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ======================
// USERS
// ======================
model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String    @unique
  password  String
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  orders    Order[]
  cart      Cart?
  likes     Like[]
}

// ======================
// PRODUCTS
// ======================
model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  season      String
  mainPic     String
  pics        String[]    // array of additional pictures
  variants    Json        // array of objects: [{size, color, quantity}]
  tags        String[]    // array of tags
  createdAt   DateTime @default(now())
  sales       Int

  // Relations
  orderItems  OrderItem[]
  cartItems   CartItem[]
  likedBy     Like[]
}

// ======================
// ORDERS
// ======================
model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime    @default(now())

  items     OrderItem[]
}

// ======================
// ORDER ITEMS
// ======================
model OrderItem {
  id        Int             @id @default(autoincrement())
  order     Order           @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product         @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

// ======================
// CART
// ======================
model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        Int       @id @default(autoincrement())
  cartId    Int
  cart      Cart      @relation(fields: [cartId], references: [id])
  productId Int
  product   Product   @relation(fields: [productId], references: [id])
  quantity  Int       @default(1)

  @@unique([cartId, productId]) // ensures one product per cart
}

// ======================
// LIKES (Wishlist)
// ======================
model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId]) // one like per product per user
}
